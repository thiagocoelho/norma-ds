"use strict";(self.webpackChunk_olostecnologia_norma_ds=self.webpackChunk_olostecnologia_norma_ds||[]).push([[314],{"./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return _inheritsLoose}});var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js");function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,(0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__.Z)(subClass,superClass)}},"./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return _objectWithoutProperties}});var _objectWithoutPropertiesLoose_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=(0,_objectWithoutPropertiesLoose_js__WEBPACK_IMPORTED_MODULE_0__.Z)(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}},"./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}__webpack_require__.d(__webpack_exports__,{Z:function(){return _setPrototypeOf}})},"./node_modules/@mui/material/Paper/Paper.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return Paper_Paper}});var objectWithoutPropertiesLoose=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"),esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("./node_modules/react/index.js"),clsx_m=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),composeClasses=__webpack_require__("./node_modules/@mui/utils/esm/composeClasses/composeClasses.js"),colorManipulator=__webpack_require__("./node_modules/@mui/system/esm/colorManipulator.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js");var styles_getOverlayAlpha=elevation=>{let alphaValue;return alphaValue=elevation<1?5.11916*elevation**2:4.5*Math.log(elevation+1)+2,(alphaValue/100).toFixed(2)},useThemeProps=__webpack_require__("./node_modules/@mui/material/styles/useThemeProps.js"),generateUtilityClasses=__webpack_require__("./node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js"),generateUtilityClass=__webpack_require__("./node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js");function getPaperUtilityClass(slot){return(0,generateUtilityClass.Z)("MuiPaper",slot)}(0,generateUtilityClasses.Z)("MuiPaper",["root","rounded","outlined","elevation","elevation0","elevation1","elevation2","elevation3","elevation4","elevation5","elevation6","elevation7","elevation8","elevation9","elevation10","elevation11","elevation12","elevation13","elevation14","elevation15","elevation16","elevation17","elevation18","elevation19","elevation20","elevation21","elevation22","elevation23","elevation24"]);var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const _excluded=["className","component","elevation","square","variant"],PaperRoot=(0,styled.ZP)("div",{name:"MuiPaper",slot:"Root",overridesResolver:(props,styles)=>{const{ownerState:ownerState}=props;return[styles.root,styles[ownerState.variant],!ownerState.square&&styles.rounded,"elevation"===ownerState.variant&&styles[`elevation${ownerState.elevation}`]]}})((({theme:theme,ownerState:ownerState})=>{var _theme$vars$overlays;return(0,esm_extends.Z)({backgroundColor:(theme.vars||theme).palette.background.paper,color:(theme.vars||theme).palette.text.primary,transition:theme.transitions.create("box-shadow")},!ownerState.square&&{borderRadius:theme.shape.borderRadius},"outlined"===ownerState.variant&&{border:`1px solid ${(theme.vars||theme).palette.divider}`},"elevation"===ownerState.variant&&(0,esm_extends.Z)({boxShadow:(theme.vars||theme).shadows[ownerState.elevation]},!theme.vars&&"dark"===theme.palette.mode&&{backgroundImage:`linear-gradient(${(0,colorManipulator.Fq)("#fff",styles_getOverlayAlpha(ownerState.elevation))}, ${(0,colorManipulator.Fq)("#fff",styles_getOverlayAlpha(ownerState.elevation))})`},theme.vars&&{backgroundImage:null==(_theme$vars$overlays=theme.vars.overlays)?void 0:_theme$vars$overlays[ownerState.elevation]}))}));var Paper_Paper=react.forwardRef((function Paper(inProps,ref){const props=(0,useThemeProps.Z)({props:inProps,name:"MuiPaper"}),{className:className,component:component="div",elevation:elevation=1,square:square=!1,variant:variant="elevation"}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,_excluded),ownerState=(0,esm_extends.Z)({},props,{component:component,elevation:elevation,square:square,variant:variant}),classes=(ownerState=>{const{square:square,elevation:elevation,variant:variant,classes:classes}=ownerState,slots={root:["root",variant,!square&&"rounded","elevation"===variant&&`elevation${elevation}`]};return(0,composeClasses.Z)(slots,getPaperUtilityClass,classes)})(ownerState);return(0,jsx_runtime.jsx)(PaperRoot,(0,esm_extends.Z)({as:component,ownerState:ownerState,className:(0,clsx_m.Z)(classes.root,className),ref:ref},other))}))},"./node_modules/@mui/material/styles/useTheme.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return useTheme}});__webpack_require__("./node_modules/react/index.js");var _mui_system__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mui/system/esm/useTheme.js"),_defaultTheme__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/material/styles/defaultTheme.js"),_identifier__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/styles/identifier.js");function useTheme(){const theme=(0,_mui_system__WEBPACK_IMPORTED_MODULE_1__.Z)(_defaultTheme__WEBPACK_IMPORTED_MODULE_2__.Z);return theme[_identifier__WEBPACK_IMPORTED_MODULE_3__.Z]||theme}},"./node_modules/@mui/material/utils/useForkRef.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var _mui_utils__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mui/utils/esm/useForkRef/useForkRef.js");__webpack_exports__.Z=_mui_utils__WEBPACK_IMPORTED_MODULE_0__.Z},"./node_modules/@mui/utils/esm/setRef.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function setRef(ref,value){"function"==typeof ref?ref(value):ref&&(ref.current=value)}__webpack_require__.d(__webpack_exports__,{Z:function(){return setRef}})},"./node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const useEnhancedEffect="undefined"!=typeof window?react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_0__.useEffect;__webpack_exports__.Z=useEnhancedEffect},"./node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_useEnhancedEffect__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js");__webpack_exports__.Z=function useEventCallback(fn){const ref=react__WEBPACK_IMPORTED_MODULE_0__.useRef(fn);return(0,_useEnhancedEffect__WEBPACK_IMPORTED_MODULE_1__.Z)((()=>{ref.current=fn})),react__WEBPACK_IMPORTED_MODULE_0__.useCallback(((...args)=>(0,ref.current)(...args)),[])}},"./node_modules/@mui/utils/esm/useForkRef/useForkRef.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return useForkRef}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_setRef__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mui/utils/esm/setRef.js");function useForkRef(...refs){return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>refs.every((ref=>null==ref))?null:instance=>{refs.forEach((ref=>{(0,_setRef__WEBPACK_IMPORTED_MODULE_1__.Z)(ref,instance)}))}),refs)}},"./src/stories/Form/TextField.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormProps:function(){return FormProps},Multiline:function(){return Multiline},Playground:function(){return Playground},Validation:function(){return Validation},Variants:function(){return Variants},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return TextField_stories}});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react=__webpack_require__("./node_modules/react/index.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),TextField=__webpack_require__("./node_modules/@mui/material/TextField/TextField.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["label","disabled","onChange"],TextField_TextField=(0,react.forwardRef)((function(props,ref){var label=props.label,rest=(props.disabled,props.onChange,(0,objectWithoutProperties.Z)(props,_excluded));return(0,jsx_runtime.jsx)(TextField.Z,(0,objectSpread2.Z)((0,objectSpread2.Z)({},rest),{},{inputRef:ref,children:label}))})),Form_TextField=(0,react.memo)(TextField_TextField);try{TextField_TextField.displayName="TextField",TextField_TextField.__docgenInfo={description:"",displayName:"TextField",props:{onChange:{defaultValue:null,description:"Callback fired when the value is changed.\n@param event The event source of the callback.\nYou can pull out the new value by accessing `event.target.value` (string).\n@param event The event source of the callback.\nYou can pull out the new value by accessing `event.target.value` (string).\n@param event The event source of the callback.\nYou can pull out the new value by accessing `event.target.value` (string).",name:"onChange",required:!1,type:{name:"(ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> & ((event: ChangeEvent<HTMLInputElement>, value: TextFieldValue) => void))"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>"}},defaultValue:{defaultValue:null,description:"The default value. Use when the component is not controlled.",name:"defaultValue",required:!1,type:{name:"unknown"}},variant:{defaultValue:{value:"'outlined'\n'outlined'\n'outlined'"},description:"The variant to use.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"filled"'},{value:'"outlined"'},{value:'"standard"'}]}},size:{defaultValue:null,description:"The size of the component.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'}]}},value:{defaultValue:null,description:"The value of the `input` element, required for a controlled component.",name:"value",required:!1,type:{name:"unknown"}},id:{defaultValue:null,description:"The id of the `input` element.\nUse this prop to make `label` and `helperText` accessible for screen readers.",name:"id",required:!1,type:{name:"string"}},fullWidth:{defaultValue:{value:"false"},description:"If `true`, the input will take up the full width of its container.",name:"fullWidth",required:!1,type:{name:"boolean"}},helperText:{defaultValue:null,description:"The helper text content.",name:"helperText",required:!1,type:{name:"ReactNode"}},type:{defaultValue:null,description:"Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},InputProps:{defaultValue:null,description:"Props applied to the Input element.\nIt will be a [`FilledInput`](/material-ui/api/filled-input/),\n[`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)\ncomponent depending on the `variant` prop value.",name:"InputProps",required:!1,type:{name:"Partial<FilledInputProps> | Partial<OutlinedInputProps> | Partial<InputProps>"}},InputLabelProps:{defaultValue:null,description:"Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.\nPointer events like `onClick` are enabled if and only if `shrink` is `true`.",name:"InputLabelProps",required:!1,type:{name:'Partial<InputLabelProps<"label", {}>>'}},autoComplete:{defaultValue:null,description:"This prop helps users to fill forms faster, especially on mobile devices.\nThe name can be confusing, as it's more like an autofill.\nYou can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).",name:"autoComplete",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"The label content.",name:"label",required:!1,type:{name:"ReactNode"}},margin:{defaultValue:{value:"'none'"},description:"If `dense` or `normal`, will adjust vertical spacing of this and contained components.",name:"margin",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"normal"'},{value:'"dense"'}]}},maxRows:{defaultValue:null,description:"Maximum number of rows to display when multiline option is set to true.",name:"maxRows",required:!1,type:{name:"string | number"}},minRows:{defaultValue:null,description:"Minimum number of rows to display when multiline option is set to true.",name:"minRows",required:!1,type:{name:"string | number"}},multiline:{defaultValue:{value:"false"},description:"If `true`, a `textarea` element is rendered instead of an input.",name:"multiline",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"The short hint displayed in the `input` before the user enters a value.",name:"placeholder",required:!1,type:{name:"string"}},rows:{defaultValue:null,description:"Number of rows to display when multiline option is set to true.",name:"rows",required:!1,type:{name:"string | number"}},select:{defaultValue:{value:"false"},description:"Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.\nIf this option is set you must pass the options of the select as children.",name:"select",required:!1,type:{name:"boolean"}},SelectProps:{defaultValue:null,description:"Props applied to the [`Select`](/material-ui/api/select/) element.",name:"SelectProps",required:!1,type:{name:"Partial<SelectProps<unknown>>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},autoFocus:{defaultValue:{value:"false"},description:"If `true`, the `input` element is focused during the first mount.",name:"autoFocus",required:!1,type:{name:"boolean"}},error:{defaultValue:{value:"false"},description:"If `true`, the label is displayed in an error state.",name:"error",required:!1,type:{name:"boolean"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<TextFieldClasses>"}},children:{defaultValue:null,description:"The content of the component.\n@ignore",name:"children",required:!1,type:{name:"ReactNode"}},color:{defaultValue:{value:"'primary'"},description:"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).",name:"color",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"primary"'},{value:'"secondary"'},{value:'"info"'},{value:'"success"'},{value:'"warning"'}]}},inputRef:{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"Ref<any>"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},hasError:{defaultValue:null,description:"",name:"hasError",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Form/TextField/index.tsx#TextField"]={docgenInfo:TextField_TextField.__docgenInfo,name:"TextField",path:"src/components/Form/TextField/index.tsx#TextField"})}catch(__react_docgen_typescript_loader_error){}var _Playground$parameter,_Playground$parameter2,_Playground$parameter3,_Variants$parameters,_Variants$parameters2,_Variants$parameters3,_FormProps$parameters,_FormProps$parameters2,_FormProps$parameters3,_Validation$parameter,_Validation$parameter2,_Validation$parameter3,_Multiline$parameters,_Multiline$parameters2,_Multiline$parameters3,Typography=__webpack_require__("./node_modules/@mui/material/Typography/Typography.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),TextField_stories={title:"Form/TextField",component:Form_TextField},Playground=function Template(args){return(0,jsx_runtime.jsx)(Form_TextField,(0,objectSpread2.Z)({},args))}.bind({});Playground.args=(0,objectSpread2.Z)({},{fullWidth:!0,label:"Label TextField"});var Variants=function Variants(){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Typography.Z,{variant:"h4",children:"Basic TextField"}),(0,jsx_runtime.jsx)(Typography.Z,{variant:"body1",children:"The TextField wrapper component is a complete form control including a label, input, and help text. It comes with three variants: outlined (default), filled, and standard."}),(0,jsx_runtime.jsxs)(Box.Z,{component:"form",sx:{"& > :not(style)":{mt:3,mb:3,ml:1,mr:1,width:"30%"}},noValidate:!0,autoComplete:"off",children:[(0,jsx_runtime.jsx)(Form_TextField,{id:"outlined-basic",label:"Outlined",variant:"outlined"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"filled-basic",label:"Filled",variant:"filled"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"standard-basic",label:"Standard",variant:"standard"})]})]})},FormProps=function FormProps(){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Typography.Z,{variant:"h4",children:"Form props"}),(0,jsx_runtime.jsx)(Typography.Z,{variant:"body1",children:"Standard form attributes are supported e.g. required, disabled, type, etc. as well as a helperText which is used to give context about a field's input, such as how the input will be used."}),(0,jsx_runtime.jsxs)(Box.Z,{component:"form",sx:{"& .MuiTextField-root":{m:1,width:"30%"}},noValidate:!0,autoComplete:"off",children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(Form_TextField,{required:!0,id:"outlined-required",label:"Required",defaultValue:"Hello World"}),(0,jsx_runtime.jsx)(Form_TextField,{disabled:!0,id:"outlined-disabled",label:"Disabled",defaultValue:"Hello World"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"outlined-password-input",label:"Password",type:"password",autoComplete:"current-password"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"outlined-read-only-input",label:"Read Only",defaultValue:"Hello World",InputProps:{readOnly:!0}}),(0,jsx_runtime.jsx)(Form_TextField,{id:"outlined-number",label:"Number",type:"number",InputLabelProps:{shrink:!0}}),(0,jsx_runtime.jsx)(Form_TextField,{id:"outlined-search",label:"Search field",type:"search"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"outlined-helperText",label:"Helper text",defaultValue:"Default Value",helperText:"Some important text"})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(Form_TextField,{required:!0,id:"filled-required",label:"Required",defaultValue:"Hello World",variant:"filled"}),(0,jsx_runtime.jsx)(Form_TextField,{disabled:!0,id:"filled-disabled",label:"Disabled",defaultValue:"Hello World",variant:"filled"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"filled-password-input",label:"Password",type:"password",autoComplete:"current-password",variant:"filled"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"filled-read-only-input",label:"Read Only",defaultValue:"Hello World",InputProps:{readOnly:!0},variant:"filled"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"filled-number",label:"Number",type:"number",InputLabelProps:{shrink:!0},variant:"filled"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"filled-search",label:"Search field",type:"search",variant:"filled"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"filled-helperText",label:"Helper text",defaultValue:"Default Value",helperText:"Some important text",variant:"filled"})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(Form_TextField,{required:!0,id:"standard-required",label:"Required",defaultValue:"Hello World",variant:"standard"}),(0,jsx_runtime.jsx)(Form_TextField,{disabled:!0,id:"standard-disabled",label:"Disabled",defaultValue:"Hello World",variant:"standard"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"standard-password-input",label:"Password",type:"password",autoComplete:"current-password",variant:"standard"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"standard-read-only-input",label:"Read Only",defaultValue:"Hello World",InputProps:{readOnly:!0},variant:"standard"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"standard-number",label:"Number",type:"number",InputLabelProps:{shrink:!0},variant:"standard"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"standard-search",label:"Search field",type:"search",variant:"standard"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"standard-helperText",label:"Helper text",defaultValue:"Default Value",helperText:"Some important text",variant:"standard"})]})]})]})},Validation=function Validation(){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Typography.Z,{variant:"h4",children:"Validation"}),(0,jsx_runtime.jsx)(Typography.Z,{variant:"body1",children:"The error prop toggles the error state. The helperText prop can then be used to provide feedback to the user about the error."}),(0,jsx_runtime.jsxs)(Box.Z,{component:"form",sx:{"& .MuiTextField-root":{m:1,width:"30%"}},noValidate:!0,autoComplete:"off",children:[(0,jsx_runtime.jsx)(Form_TextField,{error:!0,id:"outlined-error",label:"Error",defaultValue:"Hello World"}),(0,jsx_runtime.jsx)(Form_TextField,{error:!0,id:"outlined-error-helper-text",label:"Error",defaultValue:"Hello World",helperText:"Incorrect entry."}),(0,jsx_runtime.jsx)(Form_TextField,{error:!0,id:"filled-error",label:"Error",defaultValue:"Hello World",variant:"filled"}),(0,jsx_runtime.jsx)(Form_TextField,{error:!0,id:"filled-error-helper-text",label:"Error",defaultValue:"Hello World",helperText:"Incorrect entry.",variant:"filled"}),(0,jsx_runtime.jsx)(Form_TextField,{error:!0,id:"standard-error",label:"Error",defaultValue:"Hello World",variant:"standard"}),(0,jsx_runtime.jsx)(Form_TextField,{error:!0,id:"standard-error-helper-text",label:"Error",defaultValue:"Hello World",helperText:"Incorrect entry.",variant:"standard"})]})]})},Multiline=function Multiline(){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Typography.Z,{variant:"h4",children:"Multiline"}),(0,jsx_runtime.jsx)(Typography.Z,{variant:"body1",children:"The multiline prop transforms the text field into a TextareaAutosize element. Unless the rows prop is set, the height of the text field dynamically matches its content (using TextareaAutosize). You can use the minRows and maxRows props to bound it."}),(0,jsx_runtime.jsxs)(Box.Z,{component:"form",sx:{"& .MuiTextField-root":{m:1,width:"30%"}},noValidate:!0,autoComplete:"off",children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(Form_TextField,{id:"outlined-multiline-flexible",label:"Multiline",multiline:!0,maxRows:4}),(0,jsx_runtime.jsx)(Form_TextField,{id:"outlined-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0}),(0,jsx_runtime.jsx)(Form_TextField,{id:"outlined-multiline-static",label:"Multiline",multiline:!0,rows:4,defaultValue:"Default Value"})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(Form_TextField,{id:"filled-multiline-flexible",label:"Multiline",multiline:!0,maxRows:4,variant:"filled"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"filled-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,variant:"filled"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"filled-multiline-static",label:"Multiline",multiline:!0,rows:4,defaultValue:"Default Value",variant:"filled"})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(Form_TextField,{id:"standard-multiline-flexible",label:"Multiline",multiline:!0,maxRows:4,variant:"standard"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"standard-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,variant:"standard"}),(0,jsx_runtime.jsx)(Form_TextField,{id:"standard-multiline-static",label:"Multiline",multiline:!0,rows:4,defaultValue:"Default Value",variant:"standard"})]})]})]})};Variants.storyName="Basic TextField",FormProps.storyName="Form Props",Playground.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Playground.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Playground$parameter=Playground.parameters)||void 0===_Playground$parameter?void 0:_Playground$parameter.docs),{},{source:(0,objectSpread2.Z)({originalSource:"args => <TextField {...args} />"},null===(_Playground$parameter2=Playground.parameters)||void 0===_Playground$parameter2||null===(_Playground$parameter3=_Playground$parameter2.docs)||void 0===_Playground$parameter3?void 0:_Playground$parameter3.source)})}),Variants.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Variants.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Variants$parameters=Variants.parameters)||void 0===_Variants$parameters?void 0:_Variants$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:'() => <>\n    <Typography variant=\'h4\'>Basic TextField</Typography>\n    <Typography variant=\'body1\'>The TextField wrapper component is a complete form control including a label, input, and help text. It comes with three variants: outlined (default), filled, and standard.</Typography>\n      <Box component="form" sx={{\n    \'& > :not(style)\': {\n      mt: 3,\n      mb: 3,\n      ml: 1,\n      mr: 1,\n      width: \'30%\'\n    }\n  }} noValidate autoComplete="off">\n        <TextField id="outlined-basic" label="Outlined" variant="outlined" />\n        <TextField id="filled-basic" label="Filled" variant="filled" />\n        <TextField id="standard-basic" label="Standard" variant="standard" />\n      </Box>\n    </>'},null===(_Variants$parameters2=Variants.parameters)||void 0===_Variants$parameters2||null===(_Variants$parameters3=_Variants$parameters2.docs)||void 0===_Variants$parameters3?void 0:_Variants$parameters3.source)})}),FormProps.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},FormProps.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_FormProps$parameters=FormProps.parameters)||void 0===_FormProps$parameters?void 0:_FormProps$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:'() => <>\n    <Typography variant=\'h4\'>Form props</Typography>\n    <Typography variant=\'body1\'>Standard form attributes are supported e.g. required, disabled, type, etc. as well as a helperText which is used to give context about a field\'s input, such as how the input will be used.</Typography>\n     \n     <Box component="form" sx={{\n    \'& .MuiTextField-root\': {\n      m: 1,\n      width: \'30%\'\n    }\n  }} noValidate autoComplete="off">\n      <div>\n        <TextField required id="outlined-required" label="Required" defaultValue="Hello World" />\n        <TextField disabled id="outlined-disabled" label="Disabled" defaultValue="Hello World" />\n        <TextField id="outlined-password-input" label="Password" type="password" autoComplete="current-password" />\n        <TextField id="outlined-read-only-input" label="Read Only" defaultValue="Hello World" InputProps={{\n        readOnly: true\n      }} />\n        <TextField id="outlined-number" label="Number" type="number" InputLabelProps={{\n        shrink: true\n      }} />\n        <TextField id="outlined-search" label="Search field" type="search" />\n        <TextField id="outlined-helperText" label="Helper text" defaultValue="Default Value" helperText="Some important text" />\n      </div>\n      <div>\n        <TextField required id="filled-required" label="Required" defaultValue="Hello World" variant="filled" />\n        <TextField disabled id="filled-disabled" label="Disabled" defaultValue="Hello World" variant="filled" />\n        <TextField id="filled-password-input" label="Password" type="password" autoComplete="current-password" variant="filled" />\n        <TextField id="filled-read-only-input" label="Read Only" defaultValue="Hello World" InputProps={{\n        readOnly: true\n      }} variant="filled" />\n        <TextField id="filled-number" label="Number" type="number" InputLabelProps={{\n        shrink: true\n      }} variant="filled" />\n        <TextField id="filled-search" label="Search field" type="search" variant="filled" />\n        <TextField id="filled-helperText" label="Helper text" defaultValue="Default Value" helperText="Some important text" variant="filled" />\n      </div>\n      <div>\n        <TextField required id="standard-required" label="Required" defaultValue="Hello World" variant="standard" />\n        <TextField disabled id="standard-disabled" label="Disabled" defaultValue="Hello World" variant="standard" />\n        <TextField id="standard-password-input" label="Password" type="password" autoComplete="current-password" variant="standard" />\n        <TextField id="standard-read-only-input" label="Read Only" defaultValue="Hello World" InputProps={{\n        readOnly: true\n      }} variant="standard" />\n        <TextField id="standard-number" label="Number" type="number" InputLabelProps={{\n        shrink: true\n      }} variant="standard" />\n        <TextField id="standard-search" label="Search field" type="search" variant="standard" />\n        <TextField id="standard-helperText" label="Helper text" defaultValue="Default Value" helperText="Some important text" variant="standard" />\n      </div>\n      </Box>\n    </>'},null===(_FormProps$parameters2=FormProps.parameters)||void 0===_FormProps$parameters2||null===(_FormProps$parameters3=_FormProps$parameters2.docs)||void 0===_FormProps$parameters3?void 0:_FormProps$parameters3.source)})}),Validation.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Validation.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Validation$parameter=Validation.parameters)||void 0===_Validation$parameter?void 0:_Validation$parameter.docs),{},{source:(0,objectSpread2.Z)({originalSource:'() => <>\n    <Typography variant=\'h4\'>Validation</Typography>\n    <Typography variant=\'body1\'>The error prop toggles the error state. The helperText prop can then be used to provide feedback to the user about the error.</Typography>\n    \n    <Box component="form" sx={{\n    \'& .MuiTextField-root\': {\n      m: 1,\n      width: \'30%\'\n    }\n  }} noValidate autoComplete="off">\n        <TextField error id="outlined-error" label="Error" defaultValue="Hello World" />\n        <TextField error id="outlined-error-helper-text" label="Error" defaultValue="Hello World" helperText="Incorrect entry." />\n        <TextField error id="filled-error" label="Error" defaultValue="Hello World" variant="filled" />\n        <TextField error id="filled-error-helper-text" label="Error" defaultValue="Hello World" helperText="Incorrect entry." variant="filled" />\n        <TextField error id="standard-error" label="Error" defaultValue="Hello World" variant="standard" />\n        <TextField error id="standard-error-helper-text" label="Error" defaultValue="Hello World" helperText="Incorrect entry." variant="standard" />\n    </Box>\n    </>'},null===(_Validation$parameter2=Validation.parameters)||void 0===_Validation$parameter2||null===(_Validation$parameter3=_Validation$parameter2.docs)||void 0===_Validation$parameter3?void 0:_Validation$parameter3.source)})}),Multiline.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Multiline.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Multiline$parameters=Multiline.parameters)||void 0===_Multiline$parameters?void 0:_Multiline$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:'() => <>\n    <Typography variant=\'h4\'>Multiline</Typography>\n    <Typography variant=\'body1\'>The multiline prop transforms the text field into a TextareaAutosize element. Unless the rows prop is set, the height of the text field dynamically matches its content (using TextareaAutosize). You can use the minRows and maxRows props to bound it.</Typography>\n    \n    <Box component="form" sx={{\n    \'& .MuiTextField-root\': {\n      m: 1,\n      width: \'30%\'\n    }\n  }} noValidate autoComplete="off">\n     <div>\n        <TextField id="outlined-multiline-flexible" label="Multiline" multiline maxRows={4} />\n        <TextField id="outlined-textarea" label="Multiline Placeholder" placeholder="Placeholder" multiline />\n        <TextField id="outlined-multiline-static" label="Multiline" multiline rows={4} defaultValue="Default Value" />\n      </div>\n      <div>\n        <TextField id="filled-multiline-flexible" label="Multiline" multiline maxRows={4} variant="filled" />\n        <TextField id="filled-textarea" label="Multiline Placeholder" placeholder="Placeholder" multiline variant="filled" />\n        <TextField id="filled-multiline-static" label="Multiline" multiline rows={4} defaultValue="Default Value" variant="filled" />\n      </div>\n      <div>\n        <TextField id="standard-multiline-flexible" label="Multiline" multiline maxRows={4} variant="standard" />\n        <TextField id="standard-textarea" label="Multiline Placeholder" placeholder="Placeholder" multiline variant="standard" />\n        <TextField id="standard-multiline-static" label="Multiline" multiline rows={4} defaultValue="Default Value" variant="standard" />\n      </div>\n    </Box>\n    </>'},null===(_Multiline$parameters2=Multiline.parameters)||void 0===_Multiline$parameters2||null===(_Multiline$parameters3=_Multiline$parameters2.docs)||void 0===_Multiline$parameters3?void 0:_Multiline$parameters3.source)})});var __namedExportsOrder=["Playground","Variants","FormProps","Validation","Multiline"]},"./node_modules/react-transition-group/esm/TransitionGroupContext.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");__webpack_exports__.Z=react__WEBPACK_IMPORTED_MODULE_0__.createContext(null)}}]);